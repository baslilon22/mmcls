{"env_info": "sys.platform: linux\nPython: 3.8.17 | packaged by conda-forge | (default, Jun 16 2023, 07:06:00) [GCC 11.4.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda-11.6\nNVCC: Build cuda_11.6.r11.6/compiler.31057947_0\nGCC: gcc (GCC) 7.3.0\nPyTorch: 1.8.0+cu111\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.0+cu111\nOpenCV: 4.8.0\nMMCV: 1.4.2\nMMCV Compiler: n/a\nMMCV CUDA Compiler: n/a\nMMClassification: 0.24.0+", "seed": 2098334366, "mmcls_version": "0.24.0", "config": "model = dict(\n    type='ImageClassifier',\n    backbone=dict(\n        type='SwinTransformer',\n        arch='tiny',\n        init_cfg=dict(\n            type='Pretrained',\n            checkpoint=\n            '/data4/lj/Classification/1.7/work_dirs/swin_tiny/Experience3/Test_Cluster/best_accuracy_top-1_epoch_36.pth',\n            prefix='backbone'),\n        img_size=224,\n        drop_path_rate=0.2),\n    neck=dict(type='GlobalAveragePooling'),\n    head=dict(\n        type='LinearClsHead',\n        num_classes=46,\n        in_channels=768,\n        init_cfg=None,\n        loss=dict(\n            type='LabelSmoothLoss',\n            label_smooth_val=0.1,\n            mode='original',\n            loss_weight=[\n                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n                1, 1, 1, 1, 1, 1, 1, 1, 0.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n            ]),\n        cal_acc=False),\n    init_cfg=[\n        dict(type='TruncNormal', layer='Linear', std=0.02, bias=0.0),\n        dict(type='Constant', layer='LayerNorm', val=1.0, bias=0.0)\n    ],\n    train_cfg=dict(augments=[\n        dict(type='BatchMixup', alpha=0.8, num_classes=46, prob=0.5),\n        dict(type='BatchCutMix', alpha=1.0, num_classes=46, prob=0.5)\n    ]))\nrand_increasing_policies = [\n    dict(type='AutoContrast'),\n    dict(type='Equalize'),\n    dict(type='Invert'),\n    dict(type='Rotate', magnitude_key='angle', magnitude_range=(0, 90)),\n    dict(type='Posterize', magnitude_key='bits', magnitude_range=(4, 0)),\n    dict(type='Solarize', magnitude_key='thr', magnitude_range=(256, 0)),\n    dict(\n        type='SolarizeAdd',\n        magnitude_key='magnitude',\n        magnitude_range=(0, 110)),\n    dict(\n        type='ColorTransform',\n        magnitude_key='magnitude',\n        magnitude_range=(0, 0.9)),\n    dict(type='Contrast', magnitude_key='magnitude', magnitude_range=(0, 0.9)),\n    dict(\n        type='Brightness', magnitude_key='magnitude',\n        magnitude_range=(0, 0.9)),\n    dict(\n        type='Sharpness', magnitude_key='magnitude', magnitude_range=(0, 0.9)),\n    dict(\n        type='Shear',\n        magnitude_key='magnitude',\n        magnitude_range=(0, 0.3),\n        direction='horizontal'),\n    dict(\n        type='Shear',\n        magnitude_key='magnitude',\n        magnitude_range=(0, 0.3),\n        direction='vertical'),\n    dict(\n        type='Translate',\n        magnitude_key='magnitude',\n        magnitude_range=(0, 0.45),\n        direction='horizontal'),\n    dict(\n        type='Translate',\n        magnitude_key='magnitude',\n        magnitude_range=(0, 0.45),\n        direction='vertical')\n]\ndataset_type = 'CustomDataset'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n    dict(\n        type='RandAugment',\n        policies=[\n            dict(type='AutoContrast'),\n            dict(type='Equalize'),\n            dict(type='Invert'),\n            dict(\n                type='Rotate', magnitude_key='angle', magnitude_range=(0, 90)),\n            dict(\n                type='Posterize', magnitude_key='bits',\n                magnitude_range=(4, 0)),\n            dict(\n                type='Solarize', magnitude_key='thr',\n                magnitude_range=(256, 0)),\n            dict(\n                type='SolarizeAdd',\n                magnitude_key='magnitude',\n                magnitude_range=(0, 110)),\n            dict(\n                type='ColorTransform',\n                magnitude_key='magnitude',\n                magnitude_range=(0, 0.9)),\n            dict(\n                type='Contrast',\n                magnitude_key='magnitude',\n                magnitude_range=(0, 0.9)),\n            dict(\n                type='Brightness',\n                magnitude_key='magnitude',\n                magnitude_range=(0, 0.9)),\n            dict(\n                type='Sharpness',\n                magnitude_key='magnitude',\n                magnitude_range=(0, 0.9)),\n            dict(\n                type='Shear',\n                magnitude_key='magnitude',\n                magnitude_range=(0, 0.5),\n                direction='horizontal'),\n            dict(\n                type='Shear',\n                magnitude_key='magnitude',\n                magnitude_range=(0, 0.5),\n                direction='vertical'),\n            dict(\n                type='Translate',\n                magnitude_key='magnitude',\n                magnitude_range=(0, 0.45),\n                direction='horizontal'),\n            dict(\n                type='Translate',\n                magnitude_key='magnitude',\n                magnitude_range=(0, 0.45),\n                direction='vertical')\n        ],\n        num_policies=2,\n        total_level=10,\n        magnitude_level=9,\n        magnitude_std=0.5,\n        hparams=dict(pad_val=[104, 116, 124], interpolation='bicubic')),\n    dict(\n        type='RandomErasing',\n        erase_prob=0.25,\n        mode='rand',\n        min_area_ratio=0.02,\n        max_area_ratio=0.3333333333333333,\n        fill_color=[103.53, 116.28, 123.675],\n        fill_std=[57.375, 57.12, 58.395]),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='ToTensor', keys=['gt_label']),\n    dict(type='Collect', keys=['img', 'gt_label'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='Collect', keys=['img'])\n]\ndata = dict(\n    samples_per_gpu=60,\n    workers_per_gpu=4,\n    train=dict(\n        type='CustomDataset',\n        data_prefix=\n        '/data4/lj/Dataset/SK/Cls_Rectification_Realist_Shrank/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='Jie_Pad', pad_size_h=224, pad_size_w=224),\n            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n            dict(\n                type='RandAugment',\n                policies=[\n                    dict(type='AutoContrast'),\n                    dict(type='Equalize'),\n                    dict(type='Invert'),\n                    dict(\n                        type='Rotate',\n                        magnitude_key='angle',\n                        magnitude_range=(0, 180)),\n                    dict(\n                        type='Posterize',\n                        magnitude_key='bits',\n                        magnitude_range=(4, 0)),\n                    dict(\n                        type='Solarize',\n                        magnitude_key='thr',\n                        magnitude_range=(256, 0)),\n                    dict(\n                        type='SolarizeAdd',\n                        magnitude_key='magnitude',\n                        magnitude_range=(0, 110)),\n                    dict(\n                        type='ColorTransform',\n                        magnitude_key='magnitude',\n                        magnitude_range=(0, 0.9)),\n                    dict(\n                        type='Contrast',\n                        magnitude_key='magnitude',\n                        magnitude_range=(0, 0.9)),\n                    dict(\n                        type='Brightness',\n                        magnitude_key='magnitude',\n                        magnitude_range=(0, 0.9)),\n                    dict(\n                        type='Sharpness',\n                        magnitude_key='magnitude',\n                        magnitude_range=(0, 0.9)),\n                    dict(\n                        type='Shear',\n                        magnitude_key='magnitude',\n                        magnitude_range=(0, 0.7),\n                        direction='horizontal'),\n                    dict(\n                        type='Shear',\n                        magnitude_key='magnitude',\n                        magnitude_range=(0, 0.7),\n                        direction='vertical'),\n                    dict(\n                        type='Translate',\n                        magnitude_key='magnitude',\n                        magnitude_range=(0, 0.45),\n                        direction='horizontal'),\n                    dict(\n                        type='Translate',\n                        magnitude_key='magnitude',\n                        magnitude_range=(0, 0.45),\n                        direction='vertical')\n                ],\n                num_policies=2,\n                total_level=10,\n                magnitude_level=9,\n                magnitude_std=0.5,\n                hparams=dict(pad_val=[104, 116, 124],\n                             interpolation='bicubic')),\n            dict(\n                type='RandomErasing',\n                erase_prob=0.25,\n                mode='rand',\n                min_area_ratio=0.02,\n                max_area_ratio=0.3333333333333333,\n                fill_color=[103.53, 116.28, 123.675],\n                fill_std=[57.375, 57.12, 58.395]),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='ToTensor', keys=['gt_label']),\n            dict(type='Collect', keys=['img', 'gt_label'])\n        ],\n        Batch_size=60),\n    val=dict(\n        type='CustomDataset',\n        data_prefix=\n        '/data4/lj/Dataset/SK/Cls_Rectification_Realist_Shrank/test',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='Jie_Pad', pad_size_h=224, pad_size_w=224),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ]),\n    test=dict(\n        type='CustomDataset',\n        data_prefix=\n        '/data4/lj/Dataset/SK/Cls_Rectification_Realist_Shrank/test',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='Jie_Pad', pad_size_h=224, pad_size_w=224),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ]))\nevaluation = dict(interval=10, metric='accuracy')\nparamwise_cfg = dict(\n    norm_decay_mult=0.0,\n    bias_decay_mult=0.0,\n    custom_keys=dict({\n        '.absolute_pos_embed': dict(decay_mult=0.0),\n        '.relative_position_bias_table': dict(decay_mult=0.0)\n    }))\noptimizer = dict(\n    type='AdamW',\n    lr=0.001,\n    weight_decay=0.05,\n    eps=1e-08,\n    betas=(0.9, 0.999),\n    paramwise_cfg=dict(\n        norm_decay_mult=0.0,\n        bias_decay_mult=0.0,\n        custom_keys=dict({\n            '.absolute_pos_embed': dict(decay_mult=0.0),\n            '.relative_position_bias_table': dict(decay_mult=0.0)\n        })))\noptimizer_config = dict(grad_clip=dict(max_norm=5.0))\nlr_config = dict(\n    policy='CosineAnnealing',\n    by_epoch=False,\n    min_lr_ratio=0.01,\n    warmup='linear',\n    warmup_ratio=0.001,\n    warmup_iters=20,\n    warmup_by_epoch=True)\nrunner = dict(type='EpochBasedRunner', max_epochs=150)\ncheckpoint_config = dict(interval=30, save_optimizer=True)\nlog_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = '/data4/lj/Classification/1.7/work_dirs/swin_tiny/SK'\ngpu_ids = [0]\ndevice = 'cuda'\nseed = 2098334366\n", "CLASSES": ["jy_yg_bscq_210g", "jy_yg_bys_120g_qzjb", "jy_yg_jcfz_180g", "jy_yg_jcjb_120g", "jy_yg_jsbh_210g", "jy_yg_jyjs_120g_bbqn", "jy_yg_qhhy_120g", "jy_yg_qsysj_120g_xsbg", "jy_yg_sqzc_180g", "jy_yg_wtmnl_120g", "jy_yg_xjlb_210g_bh", "jy_yg_xjlb_210g_nm", "jy_yg_xsd_120g_jchy", "jy_yg_xsd_160g_qjlb", "jy_yg_xsd_160g_qnqx", "jy_yg_zcxh_180g", "jy_yg_zxsm_120g", "jy_ys_200jjl", "jy_ys_jqsj_dzz", "jy_ys_kjjc2", "jy_ys_kjqx2", "jy_ys_kmxjx2", "jy_ys_ktjhx3", "jy_ys_mrbhx2", "jy_ys_qqxj", "jy_ys_tssjx2", "jy_ys_xrjj_dzz", "jy_ys_ycstsqjx2", "jy_ys_yhkrx2", "negative", "saky_ys_xxmjx5", "sk_jy_yxjyx2", "sk_others", "sk_sks_zxqx_250ml", "sk_sks_zxqx_500ml_qlbh", "sk_sks_zxqx_500ml_trxc", "sk_sks_zxqx_500ml_ztbh", "sk_sks_zyqxbx_12mlx20_hlxyyqbh", "sk_xyq_mc", "sk_yg_ajs_hxzx4", "sk_yg_bjjsyt_100g", "sk_yg_bys_120g_sylbx", "sk_yg_bys_140g_qzjbx", "sk_yg_cm", "sk_yg_dxcb_180g", "sk_yg_dxzc_180g", "sk_yg_dzzh", "sk_yg_fzgc_140g", "sk_yg_fzjb_180g", "sk_yg_fzlb", "sk_yg_hhqh_120g", "sk_yg_hhqh_180g", "sk_yg_hhqh_180g_c", "sk_yg_hxlhx5", "sk_yg_jclb_210g_cszg", "sk_yg_jhlb", "sk_yg_js_yblhx3", "sk_yg_jsb_210g", "sk_yg_jylbjs_120g_qsxy", "sk_yg_jylbjs_mwyh", "sk_yg_jylbjsx2", "sk_yg_kkc", "sk_yg_lbhy_hxz", "sk_yg_lcb_120g_qsbh", "sk_yg_lcb_190g_bhjh", "sk_yg_lcb_190g_nmjh", "sk_yg_lcb_210g_qsbh", "sk_yg_lcb_210g_qxnm", "sk_yg_lcb_210g_zttrzz", "sk_yg_lcb_jtthz", "sk_yg_mbhy_yhz", "sk_yg_mghl", "sk_yg_mgqx_210g_cszg", "sk_yg_qhhy_210g_cszg", "sk_yg_qzjy_120g", "sk_yg_shqxjy_yxzx2", "sk_yg_sjhy_180g", "sk_yg_smlb_120g", "sk_yg_smqh_cxzx3_yhzg", "sk_yg_sqyh_180g", "sk_yg_ssd_105g_jbhy", "sk_yg_wCyh_120g", "sk_yg_xgqjkqx_22ml_klnm", "sk_yg_xsd_160g_dxxh", "sk_yg_xsd_160g_qsbn", "sk_yg_xsd_160g_tzjb", "sk_yg_xsd_czyhzx3_qsbn", "sk_yg_xsd_hxlh", "sk_yg_xsd_thzx2", "sk_yg_xsdjbhy_thz", "sk_yg_xsdjchy", "sk_yg_yjqxysj_120g_hfqb", "sk_yg_yjqxysj_120g_mmbc", "sk_yg_ysj_hxzx2", "sk_yg_ysjx2", "sk_yg_ysjxl", "sk_yg_yt_yxzx4", "sk_yg_zbxhyt_100g", "sk_yg_zxhy", "sk_yg_zxjbqx_140g", "sk_yg_zxqx_190g_bcbh", "sk_yg_zxqx_190g_mgjy", "sk_yg_zxqx_210g_jsbh", "sk_yg_zxqx_210g_mgqx", "sk_yg_zxqx_cqs", "sk_yg_zxqxzx_thz", "sk_yg_zxrhyy_140g", "sk_yg_zxxbxh_140g", "sk_yg_zysm", "sk_ys_cjxjkh_thzx5", "sk_ys_ddfb", "sk_ys_ddsak", "sk_ys_ddxzd", "sk_ys_ddystht", "sk_ys_dyrxl", "sk_ys_gmzxjb", "sk_ys_hbgm_shzx2", "sk_ys_jdjj", "sk_ys_jzysyy_thzx2", "sk_ys_ktgmbh_thzx3", "sk_ys_ktgmxj_thzx2", "sk_ys_ktmhx2", "sk_ys_lggmsj_thzx2", "sk_ys_llktjb_shzx2", "sk_ys_mmqsrh", "sk_ys_mmqsrh_hxlhx4", "sk_ys_mprj", "sk_ys_nstnl_thzx2", "sk_ys_nsxh_thzx2", "sk_ys_sbdd_G1", "sk_ys_sbdd_Y1", "sk_ys_sbdd_e1", "sk_ys_sbdd_e1_qcbl", "sk_ys_sbdd_n1xk", "sk_ys_sbddtht_t4_sjxfty_lbs", "sk_ys_srrs", "sk_ys_tlhy_thzx3", "sk_ys_tlhy_thzx3_o", "sk_ys_tsnl_czx4", "sk_ys_tsnl_thzx2", "sk_ys_tymr", "sk_ys_xjhy_shzx2", "sk_ys_xrryb", "sk_ys_ygmrjtyt", "sk_ys_ygmrx3", "sk_ys_ym", "sk_ys_ymcyy", "sk_ys_ynlkj", "sk_ys_ysgddys", "sk_ys_yskrx4", "sk_ys_zxmb_thzx2", "sk_ys_zxth_thzx2", "sk_yt_nghbx10", "sk_yxb_zxjcx50_v01", "sk_yxb_zxjcx50_v02", "skay_ys_ktrtx5", "skay_ys_ppqr_slox4", "skbb_yg_bbhc_yhtzx3_212", "skbb_yg_dzyh_cmxx", "skbb_yg_etayszl_150g_qxptw", "skbb_yg_etayszlkdm_150g", "skbb_yg_etcz_60g", "skbb_yg_etcz_slo60g_hmgw", "skbb_yg_etjc_60g", "skbb_yg_etmmth", "skbb_yg_etsbddystht_T11", "skbb_yg_etxnth_af2023", "skbb_yg_etyh_60g_26", "skbb_yg_flfzysjet_cmw", "skbb_yg_flfzysjet_drpt", "skbb_yg_flfzysjet_xcw", "skbb_yg_flqmfzysjet_ygqt", "skbb_yg_fzjc_xcxx", "skbb_yg_fzjcscwtj_cmxx", "skbb_yg_ktfz_212", "skbb_yg_ktfz_cmsnw", "skbb_yg_ktfz_lmsnw", "skbb_yg_mfchtz_5x30g", "skbb_yg_ysjet_60g", "skbb_yg_ysjet_slo60g_lmsnw", "skbb_yg_zw_cmwcmsnw_slo80g", "skbb_yg_zw_slo80g_cmwcmsnw", "skbb_ys_ddth", "skbb_ys_etcz_212", "skbb_ys_ethc_slox2_212", "skbb_ys_etjc_26", "skbb_ys_etjc_612", "skbb_ys_etppxq_26_2jd", "skbb_ys_etppxq_612_34jd", "skbb_ys_etppxq_slox3_zllv", "skbb_ys_etsbdd_f2_slo", "skbb_ys_jdyh_slo_26", "skbb_ys_mrydd", "skbb_ys_qzx", "skbb_ys_sbdd_slo_b2tz", "skbb_ys_ysm_mmz_212", "skbb_ys_zz_x3_212", "subb_yg_fzyhtz_212", "subb_ys_ethcx4"]}
